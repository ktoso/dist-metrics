// Code generated by protoc-gen-go.
// source: subscribe.proto
// DO NOT EDIT!

package distmetrics

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type SubscribeRequest struct {
	ResourceId       *string     `protobuf:"bytes,1,req,name=resourceId" json:"resourceId,omitempty"`
	MetricType       *MetricType `protobuf:"varint,2,req,name=metricType,enum=distmetrics.MetricType" json:"metricType,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (this *SubscribeRequest) Reset()         { *this = SubscribeRequest{} }
func (this *SubscribeRequest) String() string { return proto.CompactTextString(this) }
func (*SubscribeRequest) ProtoMessage()       {}

func (this *SubscribeRequest) GetResourceId() string {
	if this != nil && this.ResourceId != nil {
		return *this.ResourceId
	}
	return ""
}

func (this *SubscribeRequest) GetMetricType() MetricType {
	if this != nil && this.MetricType != nil {
		return *this.MetricType
	}
	return 0
}

type SubscriptionCreatedResponse struct {
	Location         *string `protobuf:"bytes,1,req,name=location" json:"location,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (this *SubscriptionCreatedResponse) Reset()         { *this = SubscriptionCreatedResponse{} }
func (this *SubscriptionCreatedResponse) String() string { return proto.CompactTextString(this) }
func (*SubscriptionCreatedResponse) ProtoMessage()       {}

func (this *SubscriptionCreatedResponse) GetLocation() string {
	if this != nil && this.Location != nil {
		return *this.Location
	}
	return ""
}

type SubscriptionResponse struct {
	Host             *string `protobuf:"bytes,1,req,name=host" json:"host,omitempty"`
	Port             *int32  `protobuf:"varint,2,req,name=port" json:"port,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (this *SubscriptionResponse) Reset()         { *this = SubscriptionResponse{} }
func (this *SubscriptionResponse) String() string { return proto.CompactTextString(this) }
func (*SubscriptionResponse) ProtoMessage()       {}

func (this *SubscriptionResponse) GetHost() string {
	if this != nil && this.Host != nil {
		return *this.Host
	}
	return ""
}

func (this *SubscriptionResponse) GetPort() int32 {
	if this != nil && this.Port != nil {
		return *this.Port
	}
	return 0
}

func init() {
}
