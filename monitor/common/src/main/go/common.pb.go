// Code generated by protoc-gen-go.
// source: common.proto
// DO NOT EDIT!

package distmetrics

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type MetricType int32

const (
	MetricType_Cpu     MetricType = 1
	MetricType_MemFree MetricType = 2
	MetricType_MemUsed MetricType = 3
	MetricType_MemMax  MetricType = 4
)

var MetricType_name = map[int32]string{
	1: "Cpu",
	2: "MemFree",
	3: "MemUsed",
	4: "MemMax",
}
var MetricType_value = map[string]int32{
	"Cpu":     1,
	"MemFree": 2,
	"MemUsed": 3,
	"MemMax":  4,
}

func (x MetricType) Enum() *MetricType {
	p := new(MetricType)
	*p = x
	return p
}
func (x MetricType) String() string {
	return proto.EnumName(MetricType_name, int32(x))
}
func (x MetricType) MarshalJSON() ([]byte, error) {
	return json.Marshal(x.String())
}
func (x *MetricType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MetricType_value, data, "MetricType")
	if err != nil {
		return err
	}
	*x = MetricType(value)
	return nil
}

func init() {
	proto.RegisterEnum("distmetrics.MetricType", MetricType_name, MetricType_value)
}
